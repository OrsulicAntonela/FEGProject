// <auto-generated />
using System;
using FEGProjectData.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FEGProjectData.Migrations
{
    [DbContext(typeof(FEGProjectContext))]
    [Migration("20211110130601_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AssignedExamGroup", b =>
                {
                    b.Property<int>("AssignedExamsAssignedExamId")
                        .HasColumnType("int");

                    b.Property<int>("GroupsGroupId")
                        .HasColumnType("int");

                    b.HasKey("AssignedExamsAssignedExamId", "GroupsGroupId");

                    b.HasIndex("GroupsGroupId");

                    b.ToTable("AssignedExamGroup");
                });

            modelBuilder.Entity("ExamQuestion", b =>
                {
                    b.Property<int>("ExamsExamId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionsQuestionId")
                        .HasColumnType("int");

                    b.HasKey("ExamsExamId", "QuestionsQuestionId");

                    b.HasIndex("QuestionsQuestionId");

                    b.ToTable("ExamQuestion");
                });

            modelBuilder.Entity("FEGProjectData.Entities.AssignedExam", b =>
                {
                    b.Property<int>("AssignedExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("Password")
                        .HasMaxLength(256)
                        .HasColumnType("int");

                    b.HasKey("AssignedExamId");

                    b.HasIndex("ExamId");

                    b.ToTable("AssignedExams");
                });

            modelBuilder.Entity("FEGProjectData.Entities.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("ExamId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("FEGProjectData.Entities.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("FEGProjectData.Entities.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("QuestionId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("FEGProjectData.Entities.QuestionOption", b =>
                {
                    b.Property<int>("QuestionOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Option")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("QuestionOptionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionOptions");
                });

            modelBuilder.Entity("FEGProjectData.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adderss")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StudentId");

                    b.HasIndex("GroupId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("FEGProjectData.Entities.StudentAnswer", b =>
                {
                    b.Property<int>("StudentAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("StudentAssignedExamId")
                        .HasColumnType("int");

                    b.HasKey("StudentAnswerId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("StudentAssignedExamId");

                    b.ToTable("StudentAnswers");
                });

            modelBuilder.Entity("FEGProjectData.Entities.StudentAssignedExam", b =>
                {
                    b.Property<int>("StudentAssignedExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssignedExamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Result")
                        .HasColumnType("float");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("StudentAssignedExamId");

                    b.HasIndex("AssignedExamId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentAssignedExams");
                });

            modelBuilder.Entity("AssignedExamGroup", b =>
                {
                    b.HasOne("FEGProjectData.Entities.AssignedExam", null)
                        .WithMany()
                        .HasForeignKey("AssignedExamsAssignedExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FEGProjectData.Entities.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExamQuestion", b =>
                {
                    b.HasOne("FEGProjectData.Entities.Exam", null)
                        .WithMany()
                        .HasForeignKey("ExamsExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FEGProjectData.Entities.Question", null)
                        .WithMany()
                        .HasForeignKey("QuestionsQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FEGProjectData.Entities.AssignedExam", b =>
                {
                    b.HasOne("FEGProjectData.Entities.Exam", "Exam")
                        .WithMany("AssignedExams")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("FEGProjectData.Entities.QuestionOption", b =>
                {
                    b.HasOne("FEGProjectData.Entities.Question", "Question")
                        .WithMany("QuestionOption")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("FEGProjectData.Entities.Student", b =>
                {
                    b.HasOne("FEGProjectData.Entities.Group", "Group")
                        .WithMany("Student")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("FEGProjectData.Entities.StudentAnswer", b =>
                {
                    b.HasOne("FEGProjectData.Entities.Question", "Question")
                        .WithMany("StudentAnswer")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FEGProjectData.Entities.StudentAssignedExam", "StudentAssignedExam")
                        .WithMany("StudentAnswer")
                        .HasForeignKey("StudentAssignedExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("StudentAssignedExam");
                });

            modelBuilder.Entity("FEGProjectData.Entities.StudentAssignedExam", b =>
                {
                    b.HasOne("FEGProjectData.Entities.AssignedExam", "AssignedExam")
                        .WithMany("StudentAssignedExam")
                        .HasForeignKey("AssignedExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FEGProjectData.Entities.Student", "Student")
                        .WithMany("StudentAssignedExam")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedExam");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FEGProjectData.Entities.AssignedExam", b =>
                {
                    b.Navigation("StudentAssignedExam");
                });

            modelBuilder.Entity("FEGProjectData.Entities.Exam", b =>
                {
                    b.Navigation("AssignedExams");
                });

            modelBuilder.Entity("FEGProjectData.Entities.Group", b =>
                {
                    b.Navigation("Student");
                });

            modelBuilder.Entity("FEGProjectData.Entities.Question", b =>
                {
                    b.Navigation("QuestionOption");

                    b.Navigation("StudentAnswer");
                });

            modelBuilder.Entity("FEGProjectData.Entities.Student", b =>
                {
                    b.Navigation("StudentAssignedExam");
                });

            modelBuilder.Entity("FEGProjectData.Entities.StudentAssignedExam", b =>
                {
                    b.Navigation("StudentAnswer");
                });
#pragma warning restore 612, 618
        }
    }
}
